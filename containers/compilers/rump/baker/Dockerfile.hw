FROM projectunik/compilers-rump-go-hw

COPY stub/ /opt/stub/
COPY mainstub.c /opt/stub/

RUN set -x && cd  /opt/stub/ && \
    cp /tmp/build/gomaincaller.go . && \
    CC=x86_64-rumprun-netbsd-gcc CGO_ENABLED=1 GOOS=rumprun /usr/local/go/bin/go build -buildmode=c-archive -v -a -x  *.go && \
    RUMPRUN_STUBLINK=succeed x86_64-rumprun-netbsd-gcc -g -o stub mainstub.c $(find . -name "*.a") && \
    rm -f /opt/code/mainstub.c /opt/code/gomaincaller.go

COPY logger/ /opt/logger/
RUN set -x && cd  /opt/logger/ && \
    cp /tmp/build/gomaincaller.go  /tmp/build/mainstub.c . && \
    CC=x86_64-rumprun-netbsd-gcc CGO_ENABLED=1 GOOS=rumprun /usr/local/go/bin/go build -buildmode=c-archive -v -a -x *.go && \
    RUMPRUN_STUBLINK=succeed x86_64-rumprun-netbsd-gcc -g -o logger mainstub.c $(find . -name "*.a") && \
    rm -f /opt/code/mainstub.c /opt/code/gomaincaller.go    
    

# localize symboles (except main, bake takes care of that one)
RUN x86_64-rumprun-netbsd-nm /opt/stub/stub|grep " T " |cut -d" " -f 3|grep -Fx -v main > /opt/stub/stubsyms && \
    x86_64-rumprun-netbsd-nm /opt/logger/logger|grep " T " |cut -d" " -f 3|grep -Fx -v main > /opt/logger/loggersyms
RUN x86_64-rumprun-netbsd-objcopy --localize-symbols=/opt/stub/stubsyms  /opt/stub/stub /opt/stub/stublocal && \
    x86_64-rumprun-netbsd-objcopy --localize-symbols=/opt/logger/loggersyms  /opt/logger/logger /opt/logger/loggerlocal


CMD rumprun-bake $RUMP_BAKE program.bin /opt/stub/stublocal program /opt/logger/loggerlocal
